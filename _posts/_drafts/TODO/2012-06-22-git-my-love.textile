---
layout: post
title: "Git, my love"
tagline: "The best thing since sliced bread, actually, fuck sliced bread"
category: personal
tags: [tech]
---
{% include JB/setup %}
It's been a while since I switched from Subversion to Git. Since then I've been using it for everything that's even slightly more complex than a text file. I use the command line most of the time, together with the following tools:

* "Meld":http://meldmerge.org/: graphical diff viewer, built-in Git support
* "vimdiff":http://vimdoc.sourceforge.net/htmldoc/diff.html: command line diff viewer, indispensable classic
* "GitG":http://git.gnome.org/browse/gitg/: Git GUI, GTK+-based
* "tig":http://jonas.nitro.dk/tig/: ncurses based Git GUI
* "etckeeper":http://joeyh.name/code/etckeeper/: keeps @/etc@ under version control, comes with several hooks for various package managers, i.e. autocomitting before and after an @apt-get@ run. Produces self-writing quasi-documentation.

"Github":https://www.github.com takes it a step further. Free accounts only have public repositories and "paid plans":https://github.com/plans are a little too expensive in my view. Lately I had to produce several projects for university. Habitually, I turn to "LaTeX":http://de.wikipedia.org/wiki/LaTeX for such stuff. The results can be found in "my Github account":https://github.com/heichblatt. Once again, the best tool turned out to be: my favourite editor "Vim":http://www.vim.org [1], a "minimal Makefile":https://github.com/heichblatt/template-academic/blob/master/Makefile and "TeX Live from the Debian repos":http://packages.debian.org/en/squeeze/texlive.

Next stop: understanding what "git-annex":http://git-annex.branchable.com can do for me.

fn1. Nevertheless, this time I experimented with "Eclipse":http://www.eclipse.org + "TeXlipse":http://texlipse.sourceforge.net + "EGit":http://www.eclipse.org, but the "KISS principle":http://en.wikipedia.org/wiki/KISS_principle got me again.
